name: Build and deploy with evidence

on:
  [workflow_dispatch]

permissions:
  id-token: write
  contents: read

jobs:
  Docker-build-with-evidence:
    runs-on: ubuntu-latest
    env:
      REPO_NAME: evidence-demo-docker-dev
    steps:
      - name: Install jfrog cli
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ vars.ARTIFACTORY_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}

      - uses: actions/checkout@v4

      - name: Log in to Artifactory Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.ARTIFACTORY_URL }}
          # username: ${{ secrets.JF_USER }} # guybar
          password: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${REPO_URL}/example-go-app:${{ github.run_number }} .
          jf docker push ${REPO_URL}/example-go-app:${{ github.run_number }}

      - name: Evidence on docker
        run: |
          echo '{ "actor": "${{ github.actor }}", "date": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'" }' > sign.json
          jf evd create --package-name example-project-app --package-version ${{ github.run_number }} --package-repo-name ${REPO_NAME} \
          --key "${{ secrets.PRIVATE_KEY }}" --key-alias ${{ secrets.KEY_ALIAS }} \
          --predicate ./sign.json --predicate-type https://jfrog.com/evidence/signature/v1 
          echo '🔎 Evidence attached: `signature` 🔏 ' 

      - name: Collecting Information from Git
        run: jf rt build-add-git

      - name: Collecting Environment Variables
        run: jf rt build-collect-env

      - name: Publish build info
        run: jfrog rt build-publish
        
      - name: Sign build evidence
        run: |
          echo '{ "actor": "${{ github.actor }}", "date": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'" }' > sign.json
          jf evd create --build-name ${{ github.job }} --build-number ${{ github.run_number }} \
            --predicate ./sign.json --predicate-type https://jfrog.com/evidence/build-signature/v1 \
            --key "${{ secrets.PRIVATE_KEY }}"  --key-alias ${{ secrets.KEY_ALIAS }}
          echo '🔎 Evidence attached: `build-signature` 🔏 ' >> $GITHUB_STEP_SUMMARY

      - name: Create release bundle
        run: |
          echo '{ "files": [ {"build": "'"${{ vars.BUILD_NAME }}/${{ github.run_number }}"'" } ] }' > bundle-spec.json
          jf release-bundle-create ${{ vars.BUNDLE_NAME }} ${{ github.run_number }} --signing-key ${{ secrets.RB_KEY }} --spec bundle-spec.json --sync=true
          echo '📦 Release bundle ['${{ vars.BUNDLE_NAME }}']('${NAME_LINK}'):['${{ github.run_number }}']('${VER_LINK}') created' >> $GITHUB_STEP_SUMMARY

      - name: Approve release-bundle
        run: |
          echo '{ "actor": "${{ github.actor }}", "date": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'", "approved": "true" }' > rbv2_evidence.json
          echo 'Approve Release bundle ['${{ github.actor }}-evidence-enablement':'${{ github.run_number }}']('${JF_LINK}') success' >> $GITHUB_STEP_SUMMARY
          jf evd create --key "${{ secrets.PRIVATE_KEY }}" --key-alias ${{ secrets.KEY_ALIAS }} \
            --release-bundle ${{ github.actor }}-evidence-enablement --release-bundle-version ${{ github.run_number }} \
            --predicate ./policy.json --predicate-type https://jfrog.com/evidence/approval/v1
